// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// fast_conv
arma::vec fast_conv(const arma::vec& x, const arma::vec& y);
RcppExport SEXP _rpeaks_fast_conv(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(fast_conv(x, y));
    return rcpp_result_gen;
END_RCPP
}
// detect_peaks
Rcpp::IntegerVector detect_peaks(const arma::vec& signal, const double lower_bound, const int refractory);
RcppExport SEXP _rpeaks_detect_peaks(SEXP signalSEXP, SEXP lower_boundSEXP, SEXP refractorySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type signal(signalSEXP);
    Rcpp::traits::input_parameter< const double >::type lower_bound(lower_boundSEXP);
    Rcpp::traits::input_parameter< const int >::type refractory(refractorySEXP);
    rcpp_result_gen = Rcpp::wrap(detect_peaks(signal, lower_bound, refractory));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rpeaks_fast_conv", (DL_FUNC) &_rpeaks_fast_conv, 2},
    {"_rpeaks_detect_peaks", (DL_FUNC) &_rpeaks_detect_peaks, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_rpeaks(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
